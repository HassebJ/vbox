{
  "name": "demand",
  "version": "0.0.3",
  "description": "Form error handling for dietjs",
  "keywords": [
    "form",
    "error",
    "error handling",
    "form handling",
    "value testing",
    "form testing",
    "data checking",
    "form checking",
    "error routing",
    "route",
    "errors"
  ],
  "bugs": {
    "url": "http://github.com/adamhalasz/demand/issues",
    "email": "mail@adamhalasz.com"
  },
  "license": "MIT",
  "author": {
    "name": "Halász Ádám",
    "email": "mail@adamhalasz.com",
    "url": "http://adamhalasz.com/"
  },
  "main": "index.js",
  "engines": {
    "node": ">=0.8.21"
  },
  "readme": "# Demand module\nForm error handling for `dietjs`\n\n### How it works?\n- You can demand `request.body[..]` values to match criterias like existence, length etc.. \n- The module is accessible in every `POST` request\n- The module can be accessed with the `request.demand` function\n- The module accepts unlimited agruments, each argument by right goes deeper in `request.body`\n- If `request.passed` is true than the form request has passed\n- If `request.passed` is false then `request.errors` contains the errors in JSON\n- You can answer if \n\t- `request.passed` with `response.success(data)`\n\t- else with `response.error(data)` \n\t- *data* is optional\n\n### Example\nWhen a `POST` request comes in (from a form or ajax request) with these parameters:\n```javascript\n\t{\n\t\t'account':{\n\t\t\tusername:'adam',\n\t\t\tpassword:'123456',\n\t\t},\n\t\t'remain_logged_in': true\n\t}\n```\nYou can check if everything is ok with the submitted data with `request.check`:\n```javascript\nvar app = new Application(options);\n\napp.get('/login', function(request, response, mysql){\n\t// DEMAND values to be specific\n\trequest.demand('username').length(0,40);\n\trequest.demand('email').length(0,40).isEmail();\n\trequest.demand('password').length(0,40).equals(request.body.password_again);\n\trequest.demand('options', 'remain_logged_in').isBoolean().length(0,1);\n\t\n\t// IF request has passed \n\tif(request.passed){ \n\t\tresponse.success(); // { passed: true, errors: false}\n\t\tmysql.end();\n\t} else {\n\t\tresponse.error(); // { passed: true, errors: [{..},{..}]}\n\t\tmysql.end();\n\t}\n});\n```\n\n### Demand Functions\n\nFunction | Condition | Example | Use Case\n--- | --- | --- | ---\n`is` | **regex** | `/([0-9]+)/i` | `request.demand('id').is(/([0-9]+)/i)`\n`isset` | **defined** | `undefined` vs `hell world` | `request.demand('message').isset()`\n`isArray` | **array** | `[1,3,5,7]` | `request.demand('users').isArray()`\n`isNumber` | **integer** | `8080` | `request.demand('birth_day').isNumber()`\n`isBoolean` | **boolean** | `true` or `false` | `request.demand('agree').isBoolean()`\n`isText` | **alpha** | `A simple text` | `request.demand('username').isText()`\n`isString` | **string** | `52 people likes you today!` | `request.demand('message').isString()`\n`isSlug` | **slug** | `seomthing_like_this_842` | `request.demand('username').isSlug()`\n`isEmail` | **email** | `me@email.com` | `request.demand('email').isEmail()`\n`isURL` | **url** | `http://example.com/?p=10` | `request.demand('personal_blog').isUrl()`\n`length` | **range** | `hello` is `4` | `request.demand('tweet').length(0, 140)`\n`equals` | **comparison** | comparing value `a` with `b` | `request.demand('agree').equals('true')`\n\n### Register Errors\n- `request.error(field, message)` - both attributes are `required`\n\n### Respond with JSON\n- `response.success(data)` \n\t- the default response value is `{ passed: true, errors: false}`\n  \t- `data` is appended to the default json response but it's `optional`\n- `response.error(data)` \n\t- the default response value is `{ passed: false, errors: [...]}`\n  \t- `data` is appended to the default json response but it's `optional`\n  \t- `errors` contain a list of erros with\n  \t\n\n### Version History\n#### v0.2\n- `added`: request.error(field, message) \n- `added`: response.success(data) \n- `added`: response.error(data) \n\n#### v0.1.5 \n- `added` Echo to arguments for multi language `isset demading`\n- Several Bug Fixes\n\n#### v0.1\n- First Release",
  "readmeFilename": "Readme.md",
  "_id": "demand@0.0.3",
  "_from": "demand@>=0.0.1"
}
